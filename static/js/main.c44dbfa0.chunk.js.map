{"version":3,"sources":["theme/index.ts","util/fn.ts","component/key-catcher/index.tsx","util/obj.ts","page/time-box/index.style.ts","hooks/use-timer.ts","page/time-box/time-box-item/index.hook.ts","util/time.ts","page/time-box/time-box-item/index.tsx","page/time-box/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mainColor","theme","createMuiTheme","typography","fontFamily","palette","primary","main","secondary","overrides","MuiTextField","root","borderColor","noop","KeyCatcher","children","onEnter","Box","onKeyDown","e","key","Key","Enter","event2Value","target","value","useTimeBoxPageStyles","makeStyles","container","padding","marginTop","border","colors","grey","borderRadius","minHeight","useTimeBoxItemStyles","item","transition","opacity","p","isFrozen","backgroundColor","marginBottom","clockIcon","isTimeout","useTimer","useState","time","setTime","Date","startTime","setStartTime","useToggle","isTimerStopped","setIsTimerStopped","id","setId","stop","clearInterval","go","window","setInterval","seconds","Math","floor","now","getTime","useTimeBoxItemHook","timer","timerOps","pick","costTime","useMemo","s","minutes","reservedSeconds","limit","useEffectOnce","TimeBoxItem","m","operations","styles","ListItem","className","ListItemAvatar","Avatar","ListItemText","Typography","variant","who","component","display","flexDirection","ListItemSecondaryAction","IconButton","onClick","edge","disabled","TimeBoxPage","data","useTimeBoxes","name","setName","setLimit","notReady","isEmpty","newTimer","useCallback","newTimeBox","Container","Paper","justifyContent","mb","Slider","data-testid","defaultValue","step","min","max","marks","valueLabelDisplay","onChangeCommitted","_","v","console","log","is","Array","isArray","alignItems","TextField","placeholder","onChange","compose","InputProps","endAdornment","title","List","timeBoxes","map","t","setTimeBoxes","concatNew","concat","length","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c44dbfa0.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core'\n\n/**main colors */\nexport const mainColor = '#B5CBB7'\nexport const mainHeavyColor = '#818479'\n\n/**secondary colors */\nexport const secondaryColor = '#E4E9B2'\nexport const secondaryHeavyColor = '#D2E4C4'\n\n/**functional colors */\nexport const warningColor = '#f4a261'\nexport const errorColor = '#e76f51'\nexport const succColor = '#2a9d8f'\nexport const failColor = errorColor\nexport const fillingColor = '#F7F9F9'\n\nexport const theme = createMuiTheme({\n\ttypography: {\n\t\tfontFamily: 'Lexend'\n\t},\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: mainColor\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: secondaryColor\n\t\t}\n\t},\n\toverrides: {\n\t\tMuiTextField: {\n\t\t\troot: {\n\t\t\t\t'& .MuiOutlinedInput-root': {\n\t\t\t\t\t'& fieldset': {\n\t\t\t\t\t\tborderColor: mainColor\n\t\t\t\t\t},\n\t\t\t\t\t'&:hover fieldset': {\n\t\t\t\t\t\tborderColor: mainColor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})\n","export const noop = () => {\n}","import { Box, BoxProps } from '@material-ui/core';\nimport React, { PropsWithChildren } from 'react';\nimport { Key } from 'ts-key-enum';\nimport { noop } from '../../util/fn';\n\nexport type KeyCatcherProps = PropsWithChildren<{\n  onEnter?: () => any;\n}>;\n\nexport const KeyCatcher = ({\n  children,\n  onEnter = noop,\n}: KeyCatcherProps) => {\n\n  const onKeyDown: BoxProps['onKeyDown'] = (e) => {\n    (e.key === Key.Enter) && onEnter();\n  };\n\n  return (\n    <Box onKeyDown={onKeyDown}>\n      {children}\n    </Box >\n  );\n};","import { is } from 'ramda'\n\nexport const event2Value = (e: { target: { value: any } }) => e.target.value\n\nexport const isArray = <T>(v: any): v is ArrayLike<T> => {\n    return is(Array)(v)\n}","import { colors, makeStyles } from '@material-ui/core'\nimport { failColor, fillingColor, succColor } from 'theme'\n\ntype StyleConf = {\n\tisTimeout: boolean\n\tisFrozen: boolean\n}\nexport const useTimeBoxPageStyles = makeStyles({\n\tcontainer: {\n\t\tpadding: '20px',\n\t\tmarginTop: '50px',\n\t\tborder: '1px solid',\n\t\tborderColor: colors.grey[300],\n\t\tborderRadius: '10px',\n\t\tminHeight: '60vh'\n\t}\n})\n\nexport const useTimeBoxItemStyles = makeStyles({\n\titem: {\n\t\ttransition: 'height 1s ease-in',\n\t\topacity: (p: StyleConf) => (p.isFrozen ? 0.4 : 1),\n\t\tbackgroundColor: fillingColor,\n\t\tborderRadius: '10px',\n\t\tmarginBottom: '10px'\n\t},\n\tclockIcon: {\n\t\tbackgroundColor: (p: StyleConf) => (p.isTimeout ? failColor : succColor)\n\t}\n})\n","import { useState } from 'react'\nimport { useToggle } from 'react-use'\n\n/** millisecond */\nconst timeStep = 1000\n\nexport const useTimer = () => {\n\tconst [time, setTime] = useState(0)\n\tconst [startTime, setStartTime] = useState<Date>(new Date())\n\tconst [isTimerStopped, setIsTimerStopped] = useToggle(false)\n\tconst stopTimer = () => setIsTimerStopped(true)\n\tconst [id, setId] = useState<number>()\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                                    WRITE                                   */\n\t/* -------------------------------------------------------------------------- */\n\tconst go = () => {\n\t\tsetStartTime(new Date())\n\t\tconst fn = () => {\n\t\t\tconst seconds = Math.floor((Date.now() - startTime.getTime()) / 1000)\n\t\t\tsetTime(seconds)\n\t\t}\n\t\tconst id = window.setInterval(fn, timeStep)\n\t\tsetId(id)\n\t}\n\n\tconst stop = () => {\n\t\tclearInterval(id)\n\t\tstopTimer()\n\t}\n\n\treturn {\n\t\ttime,\n\t\tisTimerStopped,\n\t\tstop,\n\t\tgo\n\t}\n}\n","import { useTimer } from 'hooks/use-timer'\nimport { pick } from 'ramda'\nimport { useMemo } from 'react'\nimport { useEffectOnce } from 'react-use'\nimport { second2Minute } from 'util/time'\n\nexport type UseTimeBoxItemHookProps = {\n\t/** limit should be considered with unit of second */\n\tlimit: number\n}\nexport const useTimeBoxItemHook = (p: UseTimeBoxItemHookProps) => {\n\tconst timer = useTimer()\n\tconst timerOps = pick(['isTimerStopped', 'stop'], timer)\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                                    READ                                    */\n\t/* -------------------------------------------------------------------------- */\n\t/** in a min-second format */\n\tconst costTime = useMemo(() => second2Minute(timer.time), [timer.time])\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                                   UTILITY                                  */\n\t/* -------------------------------------------------------------------------- */\n\tconst isTimeout = useMemo(() => p.limit < timer.time, [timer.time, p.limit])\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                                   EFFECT                                   */\n\t/* -------------------------------------------------------------------------- */\n\tuseEffectOnce(timer.go)\n\n\treturn { isTimeout, costTime, timerOps }\n}\n","export const second2Minute = (s: number) => {\n    return {\n        minutes: Math.floor(s / 60),\n        reservedSeconds: s % 60,\n    }\n}\n\nexport const minute2Second = (m: number) => {\n    return m * 60\n}\n","import { Avatar, Box, IconButton, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Typography } from \"@material-ui/core\";\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\nimport StopIcon from '@material-ui/icons/Stop';\nimport React from \"react\";\nimport { minute2Second } from \"util/time\";\nimport { useTimeBoxItemStyles } from \"../index.style\";\nimport { useTimeBoxItemHook } from \"./index.hook\";\n\nexport type TimeBoxItemProps = {\n  who: string;\n  limit: number;\n};\n\nexport const TimeBoxItem = (p: TimeBoxItemProps) => {\n  const operations = useTimeBoxItemHook({ limit: minute2Second(10) });\n  const styles = useTimeBoxItemStyles({ isTimeout: operations.isTimeout, isFrozen: operations.timerOps.isTimerStopped });\n\n  return (\n    <ListItem className={styles.item}>\n      <ListItemAvatar>\n        <Avatar className={styles.clockIcon}>\n          <AccessAlarmIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={<Typography variant='subtitle1'>{`${p.who} has cost`}</Typography>}\n        secondary={\n          <Box component='span' display='flex' flexDirection='column'>\n            <Typography component='span' variant='body2'>{`${operations.costTime.minutes} MIN ${operations.costTime.reservedSeconds} S`}</Typography>\n            <Typography component='span' variant='body2'>{`LIMIT: ${p.limit}MIN`}</Typography>\n          </Box>\n        } />\n      <ListItemSecondaryAction>\n        <IconButton onClick={operations.timerOps.stop} edge='end' disabled={operations.timerOps.isTimerStopped}>\n          <StopIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};","import { Box, Container, IconButton, List, Paper, Slider, SliderProps, TextField } from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { compose, concat, isEmpty } from 'ramda';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { KeyCatcher } from '../../component/key-catcher';\nimport { event2Value, isArray } from '../../util/obj';\nimport { useTimeBoxPageStyles } from './index.style';\nimport { TimeBoxItem, TimeBoxItemProps } from './time-box-item';\n\n\n\nconst defaultName = '';\nconst defaultLimit = 10;\nexport type TimeBoxPageProps = {\n};\nexport const TimeBoxPage = (p: TimeBoxPageProps) => {\n  const data = useTimeBoxes();\n  const [name, setName] = useState(defaultName);\n  const [limit, setLimit] = useState(defaultLimit);\n  const backToDefaultName = () => setName(defaultName);\n  const notReady = useMemo(() => isEmpty(name), [name]);\n  const styles = useTimeBoxPageStyles();\n\n  const newTimer = useCallback(() => {\n    if (notReady) {\n      return;\n    }\n    backToDefaultName();\n    data.newTimeBox({ who: name, limit });\n  }, [data, name, limit, notReady]);\n\n  const onTimeBoxLimitSliderChangeCommitted: SliderProps['onChangeCommitted'] = (_, v) => {\n    console.log(_);\n    console.log(v);\n    if (!isArray(v)) {\n      setLimit(v);\n    }\n  };\n\n  return (\n    <Container>\n      <Paper className={styles.container}>\n\n        <Box display='flex' flexDirection='row' justifyContent='center' mb={2}>\n          <Box>\n            {/** time slider for determine how long the timeBox is */}\n            <Slider data-testid='timer-limit-slider' defaultValue={defaultLimit} step={5} min={5} max={30} marks valueLabelDisplay='auto' onChangeCommitted={onTimeBoxLimitSliderChangeCommitted} />\n\n            <Box display='flex' alignItems='center'>\n              {/** input for determine who will be related to the timeBox */}\n              <KeyCatcher onEnter={newTimer}>\n                <TextField\n                  placeholder='Activity or People'\n                  variant='outlined'\n                  value={name}\n                  onChange={compose(setName, event2Value)}\n                  InputProps={{\n                    endAdornment: <IconButton title='start timing' disabled={notReady} onClick={newTimer}>\n                      <HourglassEmptyIcon />\n                    </IconButton>\n                  }} />\n              </KeyCatcher>\n            </Box>\n          </Box>\n        </Box>\n\n        <List>\n          {data.timeBoxes.map(t =>\n            <Box key={t.id} data-testid='timer-list-item'>\n              <TimeBoxItem  {...t} />\n            </Box>\n          )}\n        </List>\n\n      </Paper>\n    </Container>\n\n  );\n};\n\ntype BoxState = TimeBoxItemProps & { id: number; };\n// hooks\nconst useTimeBoxes = () => {\n  const [timeBoxes, setTimeBoxes] = useState<BoxState[]>([]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                    WRITE                                    */\n  /* -------------------------------------------------------------------------- */\n  const newTimeBox = (p: Pick<TimeBoxItemProps, 'who' | 'limit'>) => {\n    const concatNew = concat<BoxState[]>([{ ...p, id: timeBoxes.length }]);\n    setTimeBoxes(concatNew);\n  };\n\n  return {\n    newTimeBox, timeBoxes\n  };\n\n};","import { ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport { theme } from 'theme';\nimport './App.css';\nimport { TimeBoxPage } from './page/time-box';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <TimeBoxPage />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}